// <auto-generated />
using System;
using MAVN.Service.Campaign.MsSqlRepositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MAVN.Service.Campaign.MsSqlRepositories.Migrations
{
    [DbContext(typeof(CampaignContext))]
    partial class CampaignContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("campaign")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.BonusTypeEntity", b =>
                {
                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("AllowConversionRate")
                        .HasColumnName("allow_conversion_rate")
                        .HasColumnType("boolean");

                    b.Property<bool>("AllowInfinite")
                        .HasColumnName("allow_infinite")
                        .HasColumnType("boolean");

                    b.Property<bool>("AllowPercentage")
                        .HasColumnName("allow_percentage")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnName("creation_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DisplayName")
                        .HasColumnName("display_name")
                        .HasColumnType("text");

                    b.Property<bool>("IsAvailable")
                        .HasColumnName("is_available")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHidden")
                        .HasColumnName("is_hidden")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStakeable")
                        .HasColumnName("is_stakeable")
                        .HasColumnType("boolean");

                    b.Property<int>("Order")
                        .HasColumnName("order")
                        .HasColumnType("integer");

                    b.Property<bool>("RewardHasRatio")
                        .HasColumnName("reward_has_ration")
                        .HasColumnType("boolean");

                    b.Property<string>("Vertical")
                        .HasColumnName("vertical")
                        .HasColumnType("text");

                    b.HasKey("Type");

                    b.ToTable("bonus_type");
                });

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.BurnRuleContentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BurnRuleId")
                        .HasColumnName("burn_rule_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Localization")
                        .HasColumnName("localization")
                        .HasColumnType("integer");

                    b.Property<int>("RuleContentType")
                        .HasColumnName("content_type")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnName("value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BurnRuleId");

                    b.ToTable("burn_rule_contents");
                });

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.BurnRuleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("AmountInCurrency")
                        .HasColumnName("amount_in_currency")
                        .HasColumnType("numeric");

                    b.Property<string>("AmountInTokens")
                        .HasColumnName("amount_in_tokens")
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnName("creation_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Order")
                        .HasColumnName("order")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Price")
                        .HasColumnName("price")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("text");

                    b.Property<bool>("UsePartnerCurrencyRate")
                        .HasColumnName("use_partner_currency_rate")
                        .HasColumnType("boolean");

                    b.Property<string>("Vertical")
                        .HasColumnName("vertical")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("burn_rules");
                });

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.BurnRulePartnerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BurnRuleEntityId")
                        .HasColumnName("burn_rule_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PartnerId")
                        .HasColumnName("partner_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("BurnRuleEntityId");

                    b.ToTable("burn_rule_partners");
                });

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.CampaignEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("AmountInCurrency")
                        .HasColumnName("amount_in_currency")
                        .HasColumnType("numeric");

                    b.Property<string>("AmountInTokens")
                        .HasColumnName("amount_in_tokens")
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ApproximateAward")
                        .HasColumnName("approximate_reward")
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("CompletionCount")
                        .HasColumnName("completion_count")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnName("creation_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<DateTime>("FromDate")
                        .HasColumnName("from_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnabled")
                        .HasColumnName("is_enabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnName("order")
                        .HasColumnType("integer");

                    b.Property<string>("Reward")
                        .IsRequired()
                        .HasColumnName("reward")
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("RewardType")
                        .HasColumnName("reward_type")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnName("to_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("UsePartnerCurrencyRate")
                        .HasColumnName("use_partner_currency_rate")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("campaign");
                });

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.ConditionAttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ConditionId")
                        .HasColumnName("condition_id")
                        .HasColumnType("uuid");

                    b.Property<string>("JsonValue")
                        .HasColumnName("json_value")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnName("type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ConditionId");

                    b.ToTable("condition_attribute");
                });

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.ConditionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("AmountInCurrency")
                        .HasColumnName("amount_in_currency")
                        .HasColumnType("numeric");

                    b.Property<string>("AmountInTokens")
                        .HasColumnName("amount_in_tokens")
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ApproximateAward")
                        .HasColumnName("approximate_reward")
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("BonusTypeName")
                        .HasColumnName("bonus_type")
                        .HasColumnType("varchar(64)");

                    b.Property<decimal?>("BurningRule")
                        .HasColumnName("burning_rule")
                        .HasColumnType("numeric");

                    b.Property<Guid>("CampaignEntityId")
                        .HasColumnName("campaign_id")
                        .HasColumnType("uuid");

                    b.Property<int>("CompletionCount")
                        .HasColumnName("completion_count")
                        .HasColumnType("integer");

                    b.Property<bool>("HasStaking")
                        .HasColumnName("has_staking")
                        .HasColumnType("boolean");

                    b.Property<string>("ImmediateReward")
                        .IsRequired()
                        .HasColumnName("immediate_reward")
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("RewardType")
                        .HasColumnName("reward_type")
                        .HasColumnType("integer");

                    b.Property<string>("StakeAmount")
                        .HasColumnName("stake_amount")
                        .HasColumnType("text");

                    b.Property<int?>("StakeWarningPeriod")
                        .HasColumnName("stake_warning_period")
                        .HasColumnType("integer");

                    b.Property<int?>("StakingPeriod")
                        .HasColumnName("staking_period")
                        .HasColumnType("integer");

                    b.Property<decimal?>("StakingRule")
                        .HasColumnName("staking_rule")
                        .HasColumnType("numeric");

                    b.Property<bool>("UsePartnerCurrencyRate")
                        .HasColumnName("use_partner_currency_rate")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("BonusTypeName");

                    b.HasIndex("CampaignEntityId");

                    b.ToTable("condition");
                });

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.ConditionPartnerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ConditionEntityId")
                        .HasColumnName("condition_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PartnerId")
                        .HasColumnName("partner_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ConditionEntityId");

                    b.ToTable("condition_partners");
                });

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.Configuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastProcessedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("configuration");
                });

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.EarnRuleContentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CampaignId")
                        .HasColumnName("campaign_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Localization")
                        .HasColumnName("localization")
                        .HasColumnType("integer");

                    b.Property<int>("RuleContentType")
                        .HasColumnName("content_type")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnName("value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("earn_rule_contents");
                });

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.BurnRuleContentEntity", b =>
                {
                    b.HasOne("MAVN.Service.Campaign.MsSqlRepositories.Entities.BurnRuleEntity", "BurnRule")
                        .WithMany("BurnRuleContents")
                        .HasForeignKey("BurnRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.BurnRulePartnerEntity", b =>
                {
                    b.HasOne("MAVN.Service.Campaign.MsSqlRepositories.Entities.BurnRuleEntity", "BurnRuleEntity")
                        .WithMany("BurnRulePartners")
                        .HasForeignKey("BurnRuleEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.ConditionAttributeEntity", b =>
                {
                    b.HasOne("MAVN.Service.Campaign.MsSqlRepositories.Entities.ConditionEntity", "Condition")
                        .WithMany("Attributes")
                        .HasForeignKey("ConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.ConditionEntity", b =>
                {
                    b.HasOne("MAVN.Service.Campaign.MsSqlRepositories.Entities.BonusTypeEntity", "BonusTypeEntity")
                        .WithMany("ConditionEntities")
                        .HasForeignKey("BonusTypeName");

                    b.HasOne("MAVN.Service.Campaign.MsSqlRepositories.Entities.CampaignEntity", "CampaignEntity")
                        .WithMany("ConditionEntities")
                        .HasForeignKey("CampaignEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.ConditionPartnerEntity", b =>
                {
                    b.HasOne("MAVN.Service.Campaign.MsSqlRepositories.Entities.ConditionEntity", "ConditionEntity")
                        .WithMany("ConditionPartners")
                        .HasForeignKey("ConditionEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MAVN.Service.Campaign.MsSqlRepositories.Entities.EarnRuleContentEntity", b =>
                {
                    b.HasOne("MAVN.Service.Campaign.MsSqlRepositories.Entities.CampaignEntity", "Campaign")
                        .WithMany("EarnRuleContents")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
